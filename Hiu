--// IkanTongkol v2 (Sidebar) - UI Library
-- by you + ChatGPT

local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local Run = game:GetService("RunService")
local LP = Players.LocalPlayer

local Theme = {
    BG        = Color3.fromRGB(23,24,27),
    Panel     = Color3.fromRGB(31,33,36),
    Sidebar   = Color3.fromRGB(28,30,33),
    Accent    = Color3.fromRGB(0,170,255),
    Accent2   = Color3.fromRGB(55,190,255),
    Text      = Color3.fromRGB(235,235,235),
    Muted     = Color3.fromRGB(158,160,165),
    Stroke    = Color3.fromRGB(60,60,66),
    Good      = Color3.fromRGB(58,197,109),
    Danger    = Color3.fromRGB(255,75,90),
}

local function corner(obj, r) local c=Instance.new("UICorner"); c.CornerRadius=UDim.new(0,r or 10); c.Parent=obj; return c end
local function stroke(obj,t,c,tr) local s=Instance.new("UIStroke"); s.Thickness=t or 1; s.Color=c or Theme.Stroke; s.Transparency=tr or 0; s.Parent=obj; return s end
local function vlist(parent, pad) local l=Instance.new("UIListLayout"); l.Padding=UDim.new(0,pad or 8); l.FillDirection=Enum.FillDirection.Vertical; l.SortOrder=Enum.SortOrder.LayoutOrder; l.Parent=parent; return l end
local function hlist(parent, pad) local l=Instance.new("UIListLayout"); l.Padding=UDim.new(0,pad or 8); l.FillDirection=Enum.FillDirection.Horizontal; l.VerticalAlignment=Enum.VerticalAlignment.Center; l.SortOrder=Enum.SortOrder.LayoutOrder; l.Parent=parent; return l end
local function pad(obj,px) local p=Instance.new("UIPadding"); local u=UDim.new(0,px or 10); p.PaddingLeft,u,p.PaddingTop,u,p.PaddingRight,u,p.PaddingBottom=u; p.Parent=obj; return p end
local function safe(f, ...) if typeof(f)=="function" then local ok,e=pcall(f, ...); if not ok then warn("[IkanTongkol]",e) end end end

local function canWrite() return (writefile and readfile and isfile and makefolder) end
local function writeJSON(path, tbl)
    local ok, enc = pcall(function() return game:GetService("HttpService"):JSONEncode(tbl) end)
    if ok then pcall(function() writefile(path, enc) end) end
end
local function readJSON(path)
    if not (isfile and isfile(path)) then return nil end
    local ok,d = pcall(function() return readfile(path) end); if not ok then return nil end
    local ok2,dec = pcall(function() return game:GetService("HttpService"):JSONDecode(d) end); if ok2 then return dec end
end

local Library = {}

function Library:CreateWindow(cfg)
    cfg = cfg or {}
    local Name = cfg.Name or "Ikan Tongkol UI"
    local Keybind = cfg.ToggleUIKeybind or "K"
    local SaveCfg = cfg.ConfigurationSaving or {}
    local doSave  = SaveCfg.Enabled and canWrite()
    local folder  = SaveCfg.FolderName or "ikantongkolHUB"
    local file    = SaveCfg.FileName or "config"

    -- screen
    local sg = Instance.new("ScreenGui")
    sg.Name = "IkanTongkolUI"
    sg.IgnoreGuiInset = true
    sg.ResetOnSpawn = false
    sg.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    sg.Parent = LP:WaitForChild("PlayerGui")

    -- main window
    local win = Instance.new("Frame")
    win.Name = "Window"
    win.Size = UDim2.fromOffset(860, 520)
    win.Position = UDim2.new(0.5, -430, 0.5, -260)
    win.BackgroundColor3 = Theme.BG
    win.Parent = sg
    corner(win, 12); stroke(win,1)

    -- drag + titlebar
    local title = Instance.new("Frame")
    title.Size = UDim2.new(1,0,0,44)
    title.BackgroundTransparency = 1
    title.Parent = win
    local tpad = pad(title,12)
    local thl = hlist(title,8)

    local nameLbl = Instance.new("TextLabel")
    nameLbl.Text = Name
    nameLbl.Size = UDim2.new(1,-110,1,0)
    nameLbl.BackgroundTransparency = 1
    nameLbl.TextXAlignment = Enum.TextXAlignment.Left
    nameLbl.Font = Enum.Font.GothamBold
    nameLbl.TextSize = 18
    nameLbl.TextColor3 = Theme.Text
    nameLbl.Parent = title

    local minBtn = Instance.new("TextButton")
    minBtn.Size = UDim2.fromOffset(32,28)
    minBtn.Text = "â€“"
    minBtn.Font = Enum.Font.GothamBold
    minBtn.TextSize = 18
    minBtn.TextColor3 = Theme.Text
    minBtn.BackgroundColor3 = Theme.Panel
    minBtn.Parent = title
    corner(minBtn,8); stroke(minBtn,1)

    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.fromOffset(32,28)
    closeBtn.Text = "x"
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextSize = 16
    closeBtn.TextColor3 = Theme.Text
    closeBtn.BackgroundColor3 = Theme.Danger
    closeBtn.Parent = title
    corner(closeBtn,8)

    -- drag logic
    do
        local dragging, start, startPos
        title.InputBegan:Connect(function(i)
            if i.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true; start = i.Position; startPos = win.Position
            end
        end)
        title.InputEnded:Connect(function(i)
            if i.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
        end)
        UIS.InputChanged:Connect(function(i)
            if dragging and i.UserInputType == Enum.UserInputType.MouseMovement then
                local d = i.Position - start
                win.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + d.X, startPos.Y.Scale, startPos.Y.Offset + d.Y)
            end
        end)
    end

    minBtn.MouseButton1Click:Connect(function() sg.Enabled = not sg.Enabled end)
    closeBtn.MouseButton1Click:Connect(function() sg:Destroy() end)

    -- body (sidebar + content)
    local body = Instance.new("Frame")
    body.Size = UDim2.new(1,-20,1,-54)
    body.Position = UDim2.new(0,10,0,54)
    body.BackgroundTransparency = 1
    body.Parent = win
    local bodyList = hlist(body,10)

    -- sidebar
    local side = Instance.new("Frame")
    side.Size = UDim2.new(0, 220, 1, 0)
    side.BackgroundColor3 = Theme.Sidebar
    side.Parent = body
    corner(side,10); stroke(side,1); pad(side,10)
    local sideList = vlist(side,8)

    -- profile footer
    local profile = Instance.new("Frame")
    profile.Size = UDim2.new(1,0,0,52)
    profile.BackgroundColor3 = Theme.Panel
    profile.Parent = side
    corner(profile,10); stroke(profile,1); pad(profile,10)
    local ptxt = Instance.new("TextLabel")
    ptxt.BackgroundTransparency = 1
    ptxt.TextXAlignment = Enum.TextXAlignment.Left
    ptxt.Font = Enum.Font.GothamSemibold
    ptxt.TextSize = 12
    ptxt.TextColor3 = Theme.Muted
    ptxt.Text = "@"..LP.Name
    ptxt.Size = UDim2.new(1,0,1,0)
    ptxt.Parent = profile

    -- content
    local content = Instance.new("Frame")
    content.Size = UDim2.new(1,-(220+10),1,0)
    content.BackgroundColor3 = Theme.Panel
    content.Parent = body
    corner(content,10); stroke(content,1); pad(content,10)

    -- keybind toggle
    do
        local key = Enum.KeyCode[string.upper(Keybind)] or Enum.KeyCode.K
        UIS.InputBegan:Connect(function(i,gpe)
            if not gpe and i.KeyCode == key then sg.Enabled = not sg.Enabled end
        end)
    end

    local state = { _flags = {} }
    function state:Save()
        if not doSave then return end
        if not isfolder(folder) then pcall(makefolder, folder) end
        writeJSON(("%s/%s.json"):format(folder,file), self._flags)
    end
    function state:Load()
        if not doSave then return end
        local data = readJSON(("%s/%s.json"):format(folder,file))
        if type(data)=="table" then for k,v in pairs(data) do self._flags[k]=v end end
    end

    -- global dropdown closer
    local openDrop
    UIS.InputBegan:Connect(function(input,gpe)
        if gpe then return end
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            if openDrop and openDrop._close then openDrop:_close() end
        end
    end)

    local window = {
        _root = win, _side = side, _content = content, _state = state, _openDrop = function(d) openDrop=d end
    }

    -- TAB API (vertical)
    function window:CreateTab(title)
        local tabBtn = Instance.new("TextButton")
        tabBtn.Size = UDim2.new(1,0,0,34)
        tabBtn.Text = title or "Tab"
        tabBtn.Font = Enum.Font.Gotham
        tabBtn.TextSize = 14
        tabBtn.TextColor3 = Theme.Text
        tabBtn.BackgroundColor3 = Theme.Panel
        tabBtn.Parent = side
        corner(tabBtn,8); stroke(tabBtn,1)

        local page = Instance.new("ScrollingFrame")
        page.Size = UDim2.new(1,0,1,0)
        page.CanvasSize = UDim2.new(0,0,0,0)
        page.ScrollBarThickness = 6
        page.BackgroundTransparency = 1
        page.Visible = false
        page.Parent = content

        local inner = Instance.new("Frame")
        inner.BackgroundTransparency = 1
        inner.Size = UDim2.new(1, -4, 0, 0)
        inner.Parent = page
        pad(inner,2)
        local il = vlist(inner,10)

        -- autosize canvas
        local function updateCanvas()
            page.CanvasSize = UDim2.new(0,0,0, il.AbsoluteContentSize.Y + 12)
        end
        il:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateCanvas)
        updateCanvas()

        local function activate()
            for _,b in ipairs(side:GetChildren()) do
                if b:IsA("TextButton") then b.BackgroundColor3 = Theme.Panel end
            end
            for _,p in ipairs(content:GetChildren()) do
                if p:IsA("ScrollingFrame") then p.Visible=false end
            end
            tabBtn.BackgroundColor3 = Theme.Accent
            page.Visible = true
        end
        tabBtn.MouseButton1Click:Connect(activate)
        if #content:GetChildren() == 1 then activate() end

        local tab = { _win = window, _page = page, _inner = inner }

        -- Section
        function tab:CreateSection(title2)
            local sec = Instance.new("Frame")
            sec.BackgroundColor3 = Theme.BG
            sec.AutomaticSize = Enum.AutomaticSize.Y
            sec.Size = UDim2.new(1,0,0,10)
            sec.Parent = inner
            corner(sec,10); stroke(sec,1); pad(sec,10)
            local sl = vlist(sec,8)

            if title2 and title2~="" then
                local tl = Instance.new("TextLabel")
                tl.BackgroundTransparency = 1
                tl.TextXAlignment = Enum.TextXAlignment.Left
                tl.Font = Enum.Font.GothamSemibold
                tl.TextSize = 14
                tl.TextColor3 = Theme.Muted
                tl.Text = title2
                tl.Size = UDim2.new(1,0,0,16)
                tl.Parent = sec
            end

            local section = { _sec = sec, _win = window }

            -- Label
            function section:CreateLabel(text)
                local l = Instance.new("TextLabel")
                l.BackgroundColor3 = Theme.Panel
                l.Text = text or "Label"
                l.TextXAlignment = Enum.TextXAlignment.Left
                l.Font = Enum.Font.Gotham
                l.TextSize = 14
                l.TextColor3 = Theme.Text
                l.Size = UDim2.new(1,0,0,34)
                l.Parent = sec
                corner(l,8); stroke(l,1); pad(l,10)
                return { Set=function(_,t) l.Text=t end }
            end

            -- Button
            function section:CreateButton(p)
                p=p or {}
                local b = Instance.new("TextButton")
                b.Size = UDim2.new(1,0,0,36)
                b.Text = p.Name or "Button"
                b.Font = Enum.Font.GothamSemibold
                b.TextSize = 14
                b.TextColor3 = Theme.Text
                b.BackgroundColor3 = Theme.Accent
                b.Parent = sec
                corner(b,8); stroke(b,1,Color3.new(),0.2)
                b.MouseButton1Click:Connect(function() safe(p.Callback) end)
                return { SetName=function(_,t) b.Text=t end, Click=function() safe(p.Callback) end }
            end

            -- Toggle
            function section:CreateToggle(p)
                p=p or {}
                local v = p.CurrentValue and true or false
                local flag = p.Flag
                if flag and window._state._flags[flag]~=nil then v = window._state._flags[flag] and true or false end

                local row = Instance.new("Frame")
                row.Size = UDim2.new(1,0,0,46)
                row.BackgroundColor3 = Theme.Panel
                row.Parent = sec
                corner(row,8); stroke(row,1); pad(row,12)
                local hl = hlist(row,8)

                local lbl = Instance.new("TextLabel")
                lbl.Size = UDim2.new(1,-70,1,0)
                lbl.BackgroundTransparency = 1
                lbl.Text = p.Name or "Toggle"
                lbl.TextXAlignment = Enum.TextXAlignment.Left
                lbl.Font = Enum.Font.Gotham
                lbl.TextSize = 14
                lbl.TextColor3 = Theme.Text
                lbl.Parent = row

                local sw = Instance.new("TextButton")
                sw.Size = UDim2.fromOffset(52,24)
                sw.Text = ""
                sw.BackgroundColor3 = v and Theme.Good or Theme.BG
                sw.Parent = row
                corner(sw,12); stroke(sw,1)

                local knob = Instance.new("Frame")
                knob.Size = UDim2.fromOffset(20,20)
                knob.Position = v and UDim2.new(1,-22,0,2) or UDim2.new(0,2,0,2)
                knob.BackgroundColor3 = Theme.Panel
                knob.Parent = sw
                corner(knob,10); stroke(knob,1)

                local function apply(val)
                    v = val and true or false
                    sw.BackgroundColor3 = v and Theme.Good or Theme.BG
                    knob:TweenPosition(v and UDim2.new(1,-22,0,2) or UDim2.new(0,2,0,2), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.12, true)
                    if flag then window._state._flags[flag]=v; window._state:Save() end
                    safe(p.Callback, v)
                end
                sw.MouseButton1Click:Connect(function() apply(not v) end)
                apply(v)
                return { Set=function(_,x) apply(x) end, Get=function() return v end }
            end

            -- Input
            function section:CreateInput(p)
                p=p or {}
                local numeric = p.Numeric==true
                local flag = p.Flag
                local txt = ((flag and window._state._flags[flag]) ~= nil) and tostring(window._state._flags[flag]) or tostring(p.CurrentValue or "")
                local holder = Instance.new("Frame")
                holder.Size = UDim2.new(1,0,0,70)
                holder.BackgroundColor3 = Theme.Panel
                holder.Parent = sec
                corner(holder,8); stroke(holder,1); pad(holder,10)
                vlist(holder,8)

                local nameLbl = Instance.new("TextLabel")
                nameLbl.BackgroundTransparency = 1
                nameLbl.TextXAlignment = Enum.TextXAlignment.Left
                nameLbl.Font = Enum.Font.GothamSemibold
                nameLbl.TextSize = 13
                nameLbl.TextColor3 = Theme.Muted
                nameLbl.Text = p.Name or "Input"
                nameLbl.Size = UDim2.new(1,0,0,14)
                nameLbl.Parent = holder

                local row = Instance.new("Frame")
                row.BackgroundTransparency = 1
                row.Size = UDim2.new(1,0,0,36)
                row.Parent = holder
                local hl=hlist(row,8)

                local box = Instance.new("TextBox")
                box.Size = UDim2.new(1,-34,1,0)
                box.Text = txt
                box.PlaceholderText = p.PlaceholderText or ""
                box.Font = Enum.Font.Gotham
                box.TextSize = 14
                box.TextColor3 = Theme.Text
                box.PlaceholderColor3 = Theme.Muted
                box.BackgroundColor3 = Theme.BG
                box.ClearTextOnFocus = false
                box.Parent = row
                corner(box,8); stroke(box,1)

                local clear = Instance.new("TextButton")
                clear.Text = "Ã—"
                clear.Font = Enum.Font.GothamBold
                clear.TextSize = 16
                clear.TextColor3 = Theme.Text
                clear.Size = UDim2.fromOffset(28,28)
                clear.BackgroundColor3 = Theme.Panel
                clear.Parent = row
                corner(clear,8); stroke(clear,1)

                local function sanitize()
                    if numeric then
                        local s = box.Text:gsub("[^%d%.-]", "")
                        local neg = s:sub(1,1)=="-"; s=s:gsub("-", "")
                        local dot = s:find("%."); if dot then s = s:sub(1,dot)..s:sub(dot+1):gsub("%.","") end
                        if neg then s="- "..s; s=s:gsub("- ","-") end
                        box.Text = (#s>0 and s or "0")
                    end
                end
                box:GetPropertyChangedSignal("Text"):Connect(function()
                    if numeric then sanitize() end
                end)
                box.FocusLost:Connect(function()
                    if flag then window._state._flags[flag]=box.Text; window._state:Save() end
                    safe(p.Callback, numeric and tonumber(box.Text) or box.Text)
                end)
                clear.MouseButton1Click:Connect(function() box.Text="" end)

                return { Set=function(_,v) box.Text=tostring(v or "") end, Get=function() return numeric and tonumber(box.Text) or box.Text end }
            end

            -- Dropdown (single/multi) + search; popup ke ScreenGui
            function section:CreateDropdown(p)
                p=p or {}
                local options = p.Options or {}
                local multi = p.MultiSelection==true
                local flag  = p.Flag
                local value = p.CurrentOption or (multi and {} or "")
                if flag and window._state._flags[flag]~=nil then value = window._state._flags[flag] end

                local holder = Instance.new("Frame")
                holder.Size = UDim2.new(1,0,0, (p.Searchable and 98 or 68))
                holder.BackgroundColor3 = Theme.Panel
                holder.Parent = sec
                corner(holder,8); stroke(holder,1); pad(holder,10)
                vlist(holder,8)

                local title = Instance.new("TextLabel")
                title.BackgroundTransparency = 1
                title.TextXAlignment = Enum.TextXAlignment.Left
                title.Font = Enum.Font.GothamSemibold
                title.TextSize = 13
                title.TextColor3 = Theme.Muted
                title.Text = p.Name or "Dropdown"
                title.Size = UDim2.new(1,0,0,14)
                title.Parent = holder

                local head = Instance.new("TextButton")
                head.Size = UDim2.new(1,0,0,36)
                head.BackgroundColor3 = Theme.BG
                head.Text = ""
                head.Parent = holder
                corner(head,8); stroke(head,1)
                pad(head,10); hlist(head,6)

                local txt = Instance.new("TextLabel")
                txt.Size = UDim2.new(1,-26,1,0)
                txt.BackgroundTransparency = 1
                txt.TextXAlignment = Enum.TextXAlignment.Left
                txt.Font = Enum.Font.Gotham
                txt.TextSize = 14
                txt.TextColor3 = Theme.Text
                txt.Text = (multi and (#(value or {})>0 and table.concat(value,", ") or "None")) or (tostring(value)~="" and tostring(value) or "None")
                txt.Parent = head
                local arrow = Instance.new("TextLabel")
                arrow.Size = UDim2.fromOffset(20,20)
                arrow.BackgroundTransparency = 1
                arrow.Text = "â–¾"
                arrow.Font = Enum.Font.GothamBold
                arrow.TextSize = 16
                arrow.TextColor3 = Theme.Muted
                arrow.Parent = head

                local popup -- parent to ScreenGui
                local searchBox
                local itemButtons = {}

                local function isSel(opt)
                    if multi then for _,v in ipairs(value) do i
