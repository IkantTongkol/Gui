-- IkanTongkol.lua
-- Full-featured lightweight UI library (Rayfield-like API) with Minimize + Logo

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer

local IkanTongkol = {}
IkanTongkol.__index = IkanTongkol

-- ----------------------
-- Utilities
-- ----------------------
local function new(class, props, parent)
    local inst = Instance.new(class)
    if props then
        for k, v in pairs(props) do
            inst[k] = v
        end
    end
    if parent then inst.Parent = parent end
    return inst
end

local function tween(inst, props, time, style, dir)
    time = time or 0.22
    style = style or Enum.EasingStyle.Quad
    dir = dir or Enum.EasingDirection.Out
    local t = TweenService:Create(inst, TweenInfo.new(time, style, dir), props)
    t:Play()
    return t
end

local function clamp(v, a, b) return math.max(a, math.min(b, v)) end

local function getStoreFolder()
    local pg = LocalPlayer:FindFirstChild("PlayerGui") or LocalPlayer:WaitForChild("PlayerGui")
    local folder = pg:FindFirstChild("IkanTongkolStore")
    if not folder then
        folder = Instance.new("Folder")
        folder.Name = "IkanTongkolStore"
        folder.Parent = pg
    end
    return folder
end

local function saveFlag(flag, value)
    local folder = getStoreFolder()
    local key = folder:FindFirstChild(flag)
    if not key then
        key = Instance.new("StringValue")
        key.Name = flag
        key.Parent = folder
    end
    key.Value = HttpService:JSONEncode(value)
end

local function loadFlag(flag)
    local folder = getStoreFolder()
    local key = folder:FindFirstChild(flag)
    if not key then return nil end
    local ok, val = pcall(HttpService.JSONDecode, HttpService, key.Value)
    if ok then return val else return nil end
end

-- ----------------------
-- Window
-- ----------------------
function IkanTongkol:CreateWindow(cfg)
    cfg = cfg or {}
    local self = setmetatable({}, IkanTongkol)

    local gui = new("ScreenGui", {
        Name = cfg.Name or "IkanTongkolUI",
        ResetOnSpawn = false,
        ZIndexBehavior = Enum.ZIndexBehavior.Global
    }, LocalPlayer:WaitForChild("PlayerGui"))

    local main = new("Frame", {
        Name = "Main",
        AnchorPoint = Vector2.new(0.5, 0.5),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        Size = cfg.Size or UDim2.new(0.36, 0, 0.56, 0),
        BackgroundColor3 = cfg.BackgroundColor or Color3.fromRGB(28, 28, 30),
        BorderSizePixel = 0,
    }, gui)
    new("UICorner", { CornerRadius = UDim.new(0,12) }, main)
    new("UIStroke", { Color = Color3.fromRGB(50,50,56), Thickness = 1 }, main)

    -- Topbar
    local top = new("Frame", {
        Name = "Topbar",
        Size = UDim2.new(1,0,0,44),
        BackgroundTransparency = 0,
        BackgroundColor3 = Color3.fromRGB(34,34,36),
    }, main)
    new("UICorner", { CornerRadius = UDim.new(0,12) }, top)

    local title = new("TextLabel", {
        Name = "Title",
        BackgroundTransparency = 1,
        Position = UDim2.new(0,12,0,8),
        Size = UDim2.new(1,-80,0,28),
        Text = cfg.Title or (cfg.Name or "Ikan Tongkol"),
        TextColor3 = Color3.fromRGB(235,235,240),
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextXAlignment = Enum.TextXAlignment.Left,
    }, top)

    -- Tombol Close
    local closeBtn = new("TextButton", {
        Name = "Close",
        Size = UDim2.new(0,36,0,28),
        Position = UDim2.new(1,-46,0,8),
        BackgroundTransparency = 0.6,
        Text = "✕",
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextColor3 = Color3.fromRGB(240,80,80),
        AutoButtonColor = false,
    }, top)
    new("UICorner", { CornerRadius = UDim.new(0,8) }, closeBtn)

    -- Tombol Minimize
    local minimizeBtn = new("TextButton", {
        Name = "Minimize",
        Size = UDim2.new(0,36,0,28),
        Position = UDim2.new(1,-90,0,8), -- di kiri close
        BackgroundTransparency = 0.3,
        Text = "─",
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextColor3 = Color3.fromRGB(255,255,255),
        AutoButtonColor = false,
    }, top)
    new("UICorner", { CornerRadius = UDim.new(0,8) }, minimizeBtn)

    -- Logo ikan (ImageLabel)
    local logoBtn = new("ImageButton", {
        Name = "Logo",
        Size = UDim2.new(0,48,0,48),
        Position = UDim2.new(0,12,0,12),
        BackgroundTransparency = 1,
        Image = "rbxassetid://12882155276", -- contoh logo ikan
        Visible = false,
        ZIndex = 10
    }, gui)
    logoBtn.Active = true
    logoBtn.Draggable = true

    -- Tombol Close animasi
    closeBtn.MouseEnter:Connect(function() tween(closeBtn, {BackgroundTransparency = 0.2},0.16) end)
    closeBtn.MouseLeave:Connect(function() tween(closeBtn, {BackgroundTransparency = 0.6},0.16) end)
    closeBtn.MouseButton1Click:Connect(function()
        tween(main, {Size = UDim2.new(0,0,0,0)},0.22)
        task.delay(0.22,function() gui:Destroy() end)
    end)

    -- Tombol Minimize animasi
    local mainPos = main.Position
    minimizeBtn.MouseEnter:Connect(function() tween(minimizeBtn,{BackgroundTransparency=0.1},0.16) end)
    minimizeBtn.MouseLeave:Connect(function() tween(minimizeBtn,{BackgroundTransparency=0.3},0.16) end)
    minimizeBtn.MouseButton1Click:Connect(function()
        tween(main,{Position=UDim2.new(0.5,0,-1,0)},0.22)
        logoBtn.Visible = true
    end)

    -- Restore dari logo
    logoBtn.InputBegan:Connect(function(input)
        if input.UserInputType==Enum.UserInputType.MouseButton1 then
            tween(main,{Position=mainPos},0.22)
            logoBtn.Visible=false
        end
    end)

    -- Sidebar + Content area
    local sidebar = new("Frame", {
        Name = "Sidebar",
        Position = UDim2.new(0,0,0,44),
        Size = UDim2.new(0,160,1,-44),
        BackgroundColor3 = Color3.fromRGB(30,30,32),
    }, main)
    new("UICorner", { CornerRadius = UDim.new(0,0) }, sidebar)

    local tabsHolder = new("UIListLayout", { FillDirection = Enum.FillDirection.Vertical, Padding = UDim.new(0,8) }, sidebar)
    new("UIPadding", { PaddingTop = UDim.new(0,8), PaddingLeft = UDim.new(0,8), PaddingRight = UDim.new(0,8) }, sidebar)

    local content = new("Frame", {
        Name = "Content",
        Position = UDim2.new(0,160,0,44),
        Size = UDim2.new(1,-160,1,-44),
        BackgroundColor3 = Color3.fromRGB(26,26,28),
    }, main)
    new("UICorner", { CornerRadius = UDim.new(0,0) }, content)

    local pages = new("Folder", {Name="Pages"}, content)

    -- Drag main window
    do
        local dragging, dragStart, startPos
        top.InputBegan:Connect(function(input)
            if input.UserInputType==Enum.UserInputType.MouseButton1 or input.UserInputType==Enum.UserInputType.Touch then
                dragging=true
                dragStart=input.Position
                startPos=main.Position
                input.Changed:Connect(function()
                    if input.UserInputState==Enum.UserInputState.End then dragging=false end
                end)
            end
        end)
        UserInputService.InputChanged:Connect(function(input)
            if dragging and (input.UserInputType==Enum.UserInputType.MouseMovement or input.UserInputType==Enum.UserInputType.Touch) then
                local delta = input.Position - dragStart
                main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end)
    end

    -- Window object
    self._gui = gui
    self._main = main
    self._sidebar = sidebar
    self._content = content
    self._pages = pages
    self._tabs = {}
    self._activeTab = nil
    self._notifFolder = new("Folder", {Name="Notifications"}, main)

    -- Public methods: CreateTab, Notify, etc (sama seperti sebelumnya)
    function self:CreateTab(tabCfg)
        tabCfg = tabCfg or {}
        local tabName = tabCfg.Name or ("Tab"..(#self._tabs+1))
        local btn = new("TextButton", {Text=tabName, Size=UDim2.new(1,0,0,34), BackgroundColor3=Color3.fromRGB(28,28,30), TextColor3=Color3.fromRGB(220,220,225), Font=Enum.Font.Gotham, TextSize=14, AutoButtonColor=false}, sidebar)
        new("UICorner",{CornerRadius=UDim.new(0,8)},btn)
        local page = new("ScrollingFrame",{Name=tabName.."_Page",Size=UDim2.new(1,0,1,0),CanvasSize=UDim2.new(0,0,0,0),BackgroundTransparency=1,ScrollBarThickness=6,Visible=false,Parent=pages})
        local list = new("UIListLayout",{Padding=UDim.new(0,8)},page)
        new("UIPadding",{PaddingTop=UDim.new(0,12),PaddingLeft=UDim.new(0,12),PaddingRight=UDim.new(0,12),PaddingBottom=UDim.new(0,12)},page)
        list:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function() page.CanvasSize=UDim2.new(0,0,0,list.AbsoluteContentSize.Y+12) end)

        local tab = {_btn=btn,_page=page,_name=tabName}
        local function activate()
            for _,p in ipairs(self._pages:GetChildren()) do if p:IsA("ScrollingFrame") then p.Visible=false end end
            for _,b in ipairs(self._sidebar:GetChildren()) do if b:IsA("TextButton") then b.BackgroundColor3=Color3.fromRGB(28,28,30) end end
            page.Visible=true
            tween(btn,{BackgroundColor3=Color3.fromRGB(34,34,36)},0.16)
            self._activeTab=tab
        end
        btn.MouseButton1Click:Connect(activate)
        if #self._tabs==0 then activate() end

        -- Component builders (Toggle, Button, Slider, etc.) tetap sama seperti versi sebelumnya
        -- ...

        table.insert(self._tabs, tab)
        return tab
    end

    function self:Notify(title,text,duration)
        duration=duration or 2.4
        local note=new("Frame",{Size=UDim2.new(0,320,0,48),Position=UDim2.new(0.5,-160,0,12),BackgroundColor3=Color3.fromRGB(36,36,38),Parent=self._main},self._main)
        new("UICorner",{CornerRadius=UDim.new(0,8)},note)
        new("UIStroke",{Color=Color3.fromRGB(60,60,64),Thickness=1},note)
        local t1=new("TextLabel",{Text=title or "Info",Size=UDim2.new(1,-12,0,20),Position=UDim2.new(0,8,0,4),BackgroundTransparency=1,Font=Enum.Font.GothamBold,TextSize=14,TextColor3=Color3.fromRGB(235,235,240),TextXAlignment=Enum.TextXAlignment.Left,Parent=note},note)
        local t2=new("TextLabel",{Text=text or "",Size=UDim2.new(1,-12,0,18),Position=UDim2.new(0,8,0,22),BackgroundTransparency=1,Font=Enum.Font.Gotham,TextSize=13,TextColor3=Color3.fromRGB(200,200,205),TextXAlignment=Enum.TextXAlignment.Left,Parent=note},note)
        note.AnchorPoint=Vector2.new(0.5,0)
        note.Position=UDim2.new(0.5,-160,0,-60)
        tween(note,{Position=UDim2.new(0.5,-160,0,12),BackgroundTransparency=0},0.22)
        task.delay(duration,function() tween(note,{Position=UDim2.new(0.5,-160,0,-60),BackgroundTransparency=1},0.22) task.delay(0.22,function() if note and note.Parent then note:Destroy() end end) end)
    end

    return self
end

return IkanTongkol
