-- IkanTongkol.lua
-- Full-featured lightweight UI library (Rayfield-like API) + Minimize/Logo feature

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer

local IkanTongkol = {}
IkanTongkol.__index = IkanTongkol

-- ----------------------
-- Utilities
-- ----------------------
local function new(class, props, parent)
    local inst = Instance.new(class)
    if props then
        for k, v in pairs(props) do
            inst[k] = v
        end
    end
    if parent then inst.Parent = parent end
    return inst
end

local function tween(inst, props, time, style, dir)
    time = time or 0.22
    style = style or Enum.EasingStyle.Quad
    dir = dir or Enum.EasingDirection.Out
    local t = TweenService:Create(inst, TweenInfo.new(time, style, dir), props)
    t:Play()
    return t
end

local function clamp(v, a, b) return math.max(a, math.min(b, v)) end

local function getStoreFolder()
    local pg = LocalPlayer:FindFirstChild("PlayerGui") or LocalPlayer:WaitForChild("PlayerGui")
    local folder = pg:FindFirstChild("IkanTongkolStore")
    if not folder then
        folder = Instance.new("Folder")
        folder.Name = "IkanTongkolStore"
        folder.Parent = pg
    end
    return folder
end

local function saveFlag(flag, value)
    local folder = getStoreFolder()
    local key = folder:FindFirstChild(flag)
    if not key then
        key = Instance.new("StringValue")
        key.Name = flag
        key.Parent = folder
    end
    key.Value = HttpService:JSONEncode(value)
end

local function loadFlag(flag)
    local folder = getStoreFolder()
    local key = folder:FindFirstChild(flag)
    if not key then return nil end
    local ok, val = pcall(HttpService.JSONDecode, HttpService, key.Value)
    if ok then return val else return nil end
end

-- ----------------------
-- Window
-- ----------------------
function IkanTongkol:CreateWindow(cfg)
    cfg = cfg or {}
    local self = setmetatable({}, IkanTongkol)

    local gui = new("ScreenGui", {
        Name = cfg.Name or "IkanTongkolUI",
        ResetOnSpawn = false,
        ZIndexBehavior = Enum.ZIndexBehavior.Global
    }, LocalPlayer:WaitForChild("PlayerGui"))

    -- Main container
    local main = new("Frame", {
        Name = "Main",
        AnchorPoint = Vector2.new(0.5, 0.5),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        Size = cfg.Size or UDim2.new(0.36, 0, 0.56, 0),
        BackgroundColor3 = cfg.BackgroundColor or Color3.fromRGB(28, 28, 30),
        BorderSizePixel = 0,
    }, gui)
    new("UICorner", { CornerRadius = UDim.new(0, 12) }, main)
    new("UIStroke", { Color = Color3.fromRGB(50,50,56), Thickness = 1 }, main)

    -- Topbar
    local top = new("Frame", {
        Name = "Topbar",
        Size = UDim2.new(1, 0, 0, 44),
        BackgroundTransparency = 0,
        BackgroundColor3 = Color3.fromRGB(34,34,36),
    }, main)
    new("UICorner", { CornerRadius = UDim.new(0, 12) }, top)

    local title = new("TextLabel", {
        Name = "Title",
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 12, 0, 8),
        Size = UDim2.new(1, -100, 0, 28),
        Text = cfg.Title or (cfg.Name or "Ikan Tongkol"),
        TextColor3 = Color3.fromRGB(235,235,240),
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextXAlignment = Enum.TextXAlignment.Left,
    }, top)

    -- Close button
    local closeBtn = new("TextButton", {
        Name = "Close",
        BackgroundTransparency = 0.6,
        Size = UDim2.new(0, 36, 0, 28),
        Position = UDim2.new(1, -46, 0, 8),
        Text = "✕",
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextColor3 = Color3.fromRGB(240,80,80),
        AutoButtonColor = false,
    }, top)
    new("UICorner", { CornerRadius = UDim.new(0,8) }, closeBtn)
    closeBtn.MouseEnter:Connect(function() tween(closeBtn, {BackgroundTransparency = 0.2}, 0.16) end)
    closeBtn.MouseLeave:Connect(function() tween(closeBtn, {BackgroundTransparency = 0.6}, 0.16) end)
    closeBtn.MouseButton1Click:Connect(function()
        tween(main, {Size = UDim2.new(0,0,0,0)}, 0.22)
        task.delay(0.22, function() gui:Destroy() end)
    end)

    -- Minimize button
    local minimizeBtn = new("TextButton", {
        Name = "Minimize",
        BackgroundTransparency = 0.6,
        Size = UDim2.new(0, 36, 0, 28),
        Position = UDim2.new(1, -90, 0, 8),
        Text = "─",
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextColor3 = Color3.fromRGB(200,200,200),
        AutoButtonColor = false,
    }, top)
    new("UICorner", { CornerRadius = UDim.new(0,8) }, minimizeBtn)
    minimizeBtn.MouseEnter:Connect(function() tween(minimizeBtn, {BackgroundTransparency = 0.2}, 0.16) end)
    minimizeBtn.MouseLeave:Connect(function() tween(minimizeBtn, {BackgroundTransparency = 0.6}, 0.16) end)

    -- Sidebar + Content
    local sidebar = new("Frame", {
        Name = "Sidebar",
        Position = UDim2.new(0, 0, 0, 44),
        Size = UDim2.new(0, 160, 1, -44),
        BackgroundColor3 = Color3.fromRGB(30,30,32),
    }, main)
    new("UIListLayout", { FillDirection = Enum.FillDirection.Vertical, Padding = UDim.new(0,8) }, sidebar)
    new("UIPadding", { PaddingTop = UDim.new(0,8), PaddingLeft = UDim.new(0,8), PaddingRight = UDim.new(0,8) }, sidebar)

    local content = new("Frame", {
        Name = "Content",
        Position = UDim2.new(0, 160, 0, 44),
        Size = UDim2.new(1, -160, 1, -44),
        BackgroundColor3 = Color3.fromRGB(26,26,28),
    }, main)
    new("UICorner", { CornerRadius = UDim.new(0, 0) }, content)

    local pages = new("Folder", { Name = "Pages" }, content)

    -- Drag window
    do
        local dragging, dragStart, startPos
        top.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = main.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then dragging = false end
                end)
            end
        end)
        UserInputService.InputChanged:Connect(function(input)
            if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                local delta = input.Position - dragStart
                main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end)
    end

    -- Logo ikan (hidden awal)
    local logoBtn = new("ImageButton", {
        Name = "LogoButton",
        Size = UDim2.new(0, 48, 0, 48),
        Position = UDim2.new(0.05, 0, 0.5, 0),
        AnchorPoint = Vector2.new(0.5,0.5),
        BackgroundColor3 = Color3.fromRGB(40,40,42),
        Visible = false,
        AutoButtonColor = true,
        Parent = gui,
        Image = "rbxassetid://12702410284",
        ImageColor3 = Color3.fromRGB(255,255,255),
        ScaleType = Enum.ScaleType.Fit,
    }, gui)
    new("UICorner", { CornerRadius = UDim.new(1,0) }, logoBtn)

    -- Minimize / Restore logic
    minimizeBtn.MouseButton1Click:Connect(function()
        main.Visible = false
        logoBtn.Visible = true
    end)
    logoBtn.MouseButton1Click:Connect(function()
        main.Visible = true
        logoBtn.Visible = false
    end)

    -- Drag logo ikan
    do
        local dragging, dragStart, startPos
        logoBtn.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = logoBtn.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then dragging = false end
                end)
            end
        end)
        UserInputService.InputChanged:Connect(function(input)
            if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                local delta = input.Position - dragStart
                logoBtn.Position = UDim2.new(
                    startPos.X.Scale, startPos.X.Offset + delta.X,
                    startPos.Y.Scale, startPos.Y.Offset + delta.Y
                )
            end
        end)
    end

    -- Store references
    self._gui = gui
    self._main = main
    self._sidebar = sidebar
    self._content = content
    self._pages = pages
    self._tabs = {}
    self._activeTab = nil
    self._notifFolder = new("Folder", { Name = "Notifications" }, main)

    -- ... semua method: CreateTab, Notify, dll tetap sama seperti script aslinya ...

    return self
end

return IkanTongkol
