--= TAB API =====================================================================
function Window:CreateTab(t)
  -- boleh string atau table
  if typeof(t) ~= "table" then t = { Name = t } end
  t = t or {}
  local tabName = t.Name or "Tab"

  local navBtn = makeNavButton(self._Nav, tabName)

  local page = Instance.new("Frame"); page.Visible=false; page.BackgroundTransparency=1; page.Size=UDim2.fromScale(1,1); page.Parent=self._Content
  local sc = makeScroll(page); sc.Parent=page

  -- search
  local searchBar = Instance.new("Frame"); searchBar.Name="SearchBar"; searchBar.BackgroundTransparency=1; searchBar.Size=UDim2.new(1,-24,0,30)
  searchBar.Position=UDim2.fromOffset(12,8); searchBar.LayoutOrder=1; searchBar.Parent=sc
  local box = Instance.new("TextBox"); box.PlaceholderText="Cari kontrol..."; box.Text=""; box.Font=Enum.Font.Gotham; box.TextSize=12; box.TextColor3=Theme.Text
  box.BackgroundColor3=Theme.Panel; box.BackgroundTransparency=0.1; box.ClearTextOnFocus=false; box.Size=UDim2.new(1,0,1,0); corner(box,8); stroke(box,0.5); box.Parent=searchBar

  local container = Instance.new("Frame"); container.BackgroundTransparency=1; container.Size=UDim2.new(1,0,0,0)
  container.AutomaticSize=Enum.AutomaticSize.Y; container.Parent=sc; container.LayoutOrder=2
  local vlist = Instance.new("UIListLayout"); vlist.Padding=UDim.new(0,8); vlist.SortOrder=Enum.SortOrder.LayoutOrder; vlist.Parent=container

  local function matches(frame, q)
    q=string.lower(q)
    local function findText(obj)
      for _,d in ipairs(obj:GetDescendants()) do
        if d:IsA("TextLabel") or d:IsA("TextButton") then
          local tx=string.lower(d.Text or "")
          if string.find(tx, q, 1, true) then return true end
        end
      end
      return false
    end
    return findText(frame)
  end
  local function applyFilter()
    local q=box.Text
    for _,item in ipairs(container:GetChildren()) do
      if item:IsA("Frame") then item.Visible = (q=="" or matches(item, q)) end
    end
  end
  box:GetPropertyChangedSignal("Text"):Connect(applyFilter)

  local tab = { Button=navBtn, Page=page, Container=container }
  self._Tabs[tabName] = tab

  navBtn.MouseButton1Click:Connect(function()
    for _,tb in pairs(self._Tabs) do tb.Page.Visible=false; tb.Button.BackgroundColor3=Theme.Panel end
    page.Visible=true; navBtn.BackgroundColor3=Theme.Accent; self._CurrentTab=tab
  end)
  if not self._CurrentTab then self._CurrentTab=tab; page.Visible=true; navBtn.BackgroundColor3=Theme.Accent end

  local function card(height)
    local f=Instance.new("Frame"); f.BackgroundColor3=Theme.Panel2; f.BackgroundTransparency=0.1
    f.Size=UDim2.new(1,0,0,height or 56); corner(f,10); stroke(f,0.5); pad(f,8); f.Parent=container; return f
  end
  local function header(parent, title, subtitle)
    local lbl=Instance.new("TextLabel"); lbl.BackgroundTransparency=1; lbl.TextXAlignment=Enum.TextXAlignment.Left; lbl.TextYAlignment=Enum.TextYAlignment.Top; lbl.RichText=true
    lbl.Font=Enum.Font.Gotham; lbl.TextSize=12; lbl.TextColor3=Theme.Text
    lbl.Text = subtitle and (title.."\n<font color='#9aa3b2'>"..subtitle.."</font>") or (title or "")
    lbl.Size=UDim2.new(1,-200,1,0); lbl.Parent=parent; return lbl
  end

  -- ===== helpers: coerce positional -> table
  local function asToggle(a,b,c,d,e,f)
    if typeof(a)=="table" then return a end
    return {Name=a, Flag=b, Default=c, Callback=d, Info=e, Color=f}
  end
  local function asSlider(a,b,c,d,e,f,g,h,i)
    if typeof(a)=="table" then return a end
    return {Name=a, Min=b, Max=c, Default=d, Increment=e, Callback=f, Flag=g, ValueName=h, Color=i}
  end
  local function asDropdown(a,b,c,d,e,f)
    if typeof(a)=="table" then return a end
    return {Name=a, Options=b, Default=c, Callback=d, Flag=e, Multiple=f}
  end
  local function asTextbox(a,b,c,d,e,f)
    if typeof(a)=="table" then return a end
    return {Name=a, Default=b, Placeholder=c, Callback=d, Flag=e, TextDisappear=f}
  end
  local function asButton(a,b,c,d)
    if typeof(a)=="table" then return a end
    return {Name=a, Callback=b, ButtonName=c, Info=d}
  end
  local function asLabel(a)
    if typeof(a)=="table" then return a end
    return a -- string
  end
  local function asParagraph(a,b)
    if typeof(a)=="table" then return a end
    return {Title=a, Content=b}
  end
  local function asBind(a,b,c,d,e)
    if typeof(a)=="table" then return a end
    return {Name=a, Default=b, Callback=c, Flag=d, Hold=e}
  end
  local function asColor(a,b,c,d,e,f)
    if typeof(a)=="table" then return a end
    return {Name=a, Default=b, Callback=c, Flag=d, Info=e, Presets=f}
  end
  local function asSection(a)
    if typeof(a)=="table" then return a end
    return a
  end

  -- ================== API ==================
  local api = {}

  function api:AddSection(a)
    local name = (typeof(a)=="table" and a.Name) or asSection(a) or "Section"
    local c = card(28)
    local t=Instance.new("TextLabel"); t.BackgroundTransparency=1; t.TextXAlignment=Enum.TextXAlignment.Left; t.Font=Enum.Font.GothamMedium; t.TextSize=12; t.TextColor3=Theme.Text; t.Text=name; t.Parent=c
  end

  function api:AddLabel(a, ...)
    local d = asLabel(a, ...)
    local text=(typeof(d)=="table" and d.Name) or d or "Label"
    local c=card(32)
    local t=Instance.new("TextLabel"); t.BackgroundTransparency=1; t.TextXAlignment=Enum.TextXAlignment.Left; t.Font=Enum.Font.Gotham; t.TextSize=12; t.TextColor3=Theme.Text; t.Text=text; t.Parent=c
    return { Set=function(v) t.Text=v end }
  end

  function api:AddParagraph(a, b)
    local d=asParagraph(a,b)
    local c=card(86)
    local tl=Instance.new("TextLabel"); tl.BackgroundTransparency=1; tl.TextXAlignment=Enum.TextXAlignment.Left; tl.Font=Enum.Font.GothamMedium; tl.TextSize=12; tl.TextColor3=Theme.Text; tl.Text=(d.Title or ""); tl.Size=UDim2.new(1,-8,0,18); tl.Parent=c
    local tx=Instance.new("TextLabel"); tx.BackgroundTransparency=1; tx.TextXAlignment=Enum.TextXAlignment.Left; tx.TextYAlignment=Enum.TextYAlignment.Top; tx.TextWrapped=true; tx.Font=Enum.Font.Gotham; tx.TextSize=12; tx.TextColor3=Theme.TextDim; tx.Text=(d.Content or ""); tx.Position=UDim2.fromOffset(0,22); tx.Size=UDim2.new(1,-8,1,-26); tx.Parent=c
    return { Set=function(dd) tl.Text=dd.Title or tl.Text; tx.Text=dd.Content or tx.Text end }
  end

  function api:AddButton(a, b, c, d)
    local x=asButton(a,b,c,d)
    local cfr=card(48); header(cfr, x.Name or "Button")
    local btn=Instance.new("TextButton"); btn.AnchorPoint=Vector2.new(1,0.5); btn.Position=UDim2.new(1,-12,0.5,0); btn.Size=UDim2.fromOffset(120,28)
    btn.Text=x.ButtonName or "Run"; btn.Font=Enum.Font.Gotham; btn.TextSize=12; btn.TextColor3=Theme.Text; btn.BackgroundColor3=Theme.Panel; btn.BackgroundTransparency=0.1; btn.AutoButtonColor=false; corner(btn,8); stroke(btn,0.5); btn.Parent=cfr
    btn.MouseButton1Click:Connect(function() if x.Callback then pcall(x.Callback) end end)
    return {}
  end

  function api:AddToggle(a, b, c, d, e, f)
    local x=asToggle(a,b,c,d,e,f)
    local cfr=card(56); header(cfr, x.Name or "Toggle", x.Info)
    local accent=x.Color or Theme.Accent
    local sw=Instance.new("TextButton"); sw.Size=UDim2.fromOffset(56,28); sw.AnchorPoint=Vector2.new(1,0.5); sw.Position=UDim2.new(1,-12,0.5,0); sw.Text=""; sw.AutoButtonColor=false
    sw.BackgroundColor3=(x.Default and accent) or Color3.fromRGB(60,62,70); corner(sw,14); stroke(sw,0.5); sw.Parent=cfr
    local knob=Instance.new("Frame"); knob.Size=UDim2.fromOffset(22,22); knob.Position=(x.Default and UDim2.fromOffset(30,3)) or UDim2.fromOffset(4,3); knob.BackgroundColor3=Color3.fromRGB(240,240,240); corner(knob,11); knob.Parent=sw
    local on=x.Default or false
    local function set(v)
      on = v and true or false
      sw.BackgroundColor3 = on and accent or Color3.fromRGB(60,62,70)
      knob.Position = on and UDim2.fromOffset(30,3) or UDim2.fromOffset(4,3)
      if x.Flag then local flags=makeFlagTable(Tongkol); flags[x.Flag]=flags[x.Flag] or {}; flags[x.Flag].Value=on end
      if x.Callback then pcall(x.Callback, on) end
    end
    sw.MouseButton1Click:Connect(function() set(not on) end)
    attachFlag(Tongkol, x.Flag, set, function() return on end, on); set(on)
    return { Set=set }
  end

  function api:AddSlider(a,b,c,d,e,f,g,h,i)
    local x=asSlider(a,b,c,d,e,f,g,h,i)
    local min,max = x.Min or 0, x.Max or 100
    local inc = math.max(1, x.Increment or 1)
    local def = x.Default or min
    local cfr=card(68)
    local vn=x.ValueName
    header(cfr, x.Name or "Slider", (vn and (vn..": ") or "")..string.format("%dâ€“%d", min, max))
    local valLbl=Instance.new("TextLabel"); valLbl.BackgroundTransparency=1; valLbl.AnchorPoint=Vector2.new(1,0); valLbl.Position=UDim2.new(1,-12,0,0); valLbl.Size=UDim2.fromOffset(100,16)
    valLbl.Font=Enum.Font.Gotham; valLbl.TextSize=12; valLbl.TextColor3=Theme.TextDim; valLbl.TextXAlignment=Enum.TextXAlignment.Right; valLbl.Parent=cfr
    local track=Instance.new("Frame"); track.Size=UDim2.new(1,-24,0,6); track.Position=UDim2.fromOffset(12,38); track.BackgroundColor3=Color3.fromRGB(60,62,70); corner(track,3); track.Parent=cfr
    local fill=Instance.new("Frame"); fill.Size=UDim2.new(0,0,1,0); fill.BackgroundColor3=x.Color or Theme.Accent; corner(fill,3); fill.Parent=track
    local knob=Instance.new("Frame"); knob.Size=UDim2.fromOffset(14,14); knob.AnchorPoint=Vector2.new(0.5,0.5); knob.Position=UDim2.new(0,0,0.5,0); knob.BackgroundColor3=Color3.fromRGB(240,240,240); corner(knob,7); knob.Parent=track
    local value=def
    local function roundStep(v) v=math.clamp(v,min,max); local n=math.floor((v-min)/inc+0.5)*inc + min; return math.clamp(n,min,max) end
    local function set(v)
      value=roundStep(v); local a=(value-min)/(max-min)
      fill.Size=UDim2.new(a,0,1,0); knob.Position=UDim2.new(a,0,0.5,0); valLbl.Text=tostring(value)
      if x.Flag then local flags=makeFlagTable(Tongkol); flags[x.Flag]=flags[x.Flag] or {}; flags[x.Flag].Value=value end
      if x.Callback then pcall(x.Callback, value) end
    end
    local dragging=false
    track.InputBegan:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=true end end)
    track.InputEnded:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=false end end)
    UserInputService.InputChanged:Connect(function(i)
      if dragging and i.UserInputType==Enum.UserInputType.MouseMovement then
        local rel=math.clamp((UserInputService:GetMouseLocation().X - track.AbsolutePosition.X)/track.AbsoluteSize.X, 0, 1)
        set(min + rel*(max - min))
      end
    end)
    attachFlag(Tongkol, x.Flag, set, function() return value end, value); set(def)
    return { Set=set }
  end

  function api:AddDropdown(a,b,c,d,e,f)
    local x=asDropdown(a,b,c,d,e,f)
    local items={}
    for _,v in ipairs(x.Options or {"A","B"}) do table.insert(items,v) end
    local multi = x.Multiple or x.MultipleOptions or (typeof(x.Default)=="table")
    local sel = multi and (x.Default or {}) or (x.Default or items[1])

    local cfr=card(56); header(cfr, x.Name or "Dropdown")
    local btn=Instance.new("TextButton"); btn.AnchorPoint=Vector2.new(1,0.5); btn.Position=UDim2.new(1,-12,0.5,0); btn.Size=UDim2.fromOffset(220,28)
    btn.Text = (multi and (#sel==0 and "None" or (#sel==1 and sel[1] or "Various"))) or (sel or "")
    btn.Font=Enum.Font.Gotham; btn.TextSize=12; btn.TextColor3=Theme.Text; btn.BackgroundColor3=Theme.Panel; btn.BackgroundTransparency=0.1; btn.AutoButtonColor=false; corner(btn,8); stroke(btn,0.5); btn.Parent=cfr

    local popupRoot=self._PopupRoot
    local currentPopup
    local function closePopup() if currentPopup then currentPopup:Destroy(); currentPopup=nil end end

    local function clampMenuPos(xp,yp,w,h)
      local vs=Camera and Camera.ViewportSize or Vector2.new(1920,1080)
      local nx=math.clamp(xp,8,vs.X-w-8); local ny=math.clamp(yp,8,vs.Y-h-8); return nx,ny
    end

    local function setLabelFromSel()
      if multi then
        if #sel==0 then btn.Text="None"
        elseif #sel==1 then btn.Text=sel[1]
        else btn.Text="Various" end
      else btn.Text = sel or "" end
    end

    local function openPopup()
      closePopup()
      local holder=Instance.new("Frame"); holder.BackgroundTransparency=1; holder.Size=UDim2.fromScale(1,1); holder.ZIndex=5000; holder.Parent=popupRoot
      local blocker=Instance.new("TextButton"); blocker.BackgroundTransparency=1; blocker.Text=""; blocker.Size=UDim2.fromScale(1,1); blocker.ZIndex=5000; blocker.Parent=holder
      local menu=Instance.new("Frame"); menu.BackgroundColor3=Theme.Panel; menu.BackgroundTransparency=0.05; menu.ZIndex=5001; corner(menu,8); stroke(menu,0.5); pad(menu,6); menu.Parent=holder
      local l=Instance.new("UIListLayout"); l.Padding=UDim.new(0,6); l.SortOrder=Enum.SortOrder.LayoutOrder; l.Parent=menu

      local height = math.clamp(math.max(#items,1),1,8)*24 + 8
      menu.Size=UDim2.fromOffset(220,height)
      local pos=btn.AbsolutePosition; local size=btn.AbsoluteSize
      local mx=pos.X + size.X - 220
      local my=pos.Y + size.Y + 6
      mx,my=clampMenuPos(mx,my,220,height)
      menu.Position=UDim2.fromOffset(mx,my)

      if #items==0 then
        local i=Instance.new("TextLabel"); i.Size=UDim2.new(1,0,0,22); i.Text="(no options)"; i.TextColor3=Theme.TextDim; i.Font=Enum.Font.Gotham; i.TextSize=12; i.BackgroundTransparency=1; i.ZIndex=5001; i.Parent=menu
      else
        for _,it in ipairs(items) do
          local i=Instance.new("TextButton"); i.Size=UDim2.new(1,0,0,22); i.Text=it; i.TextColor3=Theme.Text; i.Font=Enum.Font.Gotham; i.TextSize=12; i.BackgroundTransparency=1; i.ZIndex=5001; i.Parent=menu
          i.MouseButton1Click:Connect(function()
            if multi then
              local idx=table.find(sel, it)
              if idx then table.remove(sel, idx) else table.insert(sel, it) end
            else
              sel = it
            end
            setLabelFromSel()
            if x.Flag then local flags=makeFlagTable(Tongkol); flags[x.Flag]=flags[x.Flag] or {}; flags[x.Flag].Value = multi and sel or sel end
            if x.Callback then if multi then pcall(x.Callback, sel) else pcall(x.Callback, sel) end end
            if not multi then closePopup() end
          end)
        end
      end

      blocker.MouseButton1Click:Connect(closePopup)
      currentPopup = holder
    end

    btn.MouseButton1Click:Connect(function() if currentPopup then closePopup() else openPopup() end end)
    setLabelFromSel()
    attachFlag(Tongkol, x.Flag, function(v) sel=v; setLabelFromSel() end, function() return sel end, sel)

    return {
      Set = function(v) sel=v; setLabelFromSel() end,
      Add = function(v) table.insert(items, v) end,
      Remove = function(v)
        for k,xv in ipairs(items) do if xv==v then table.remove(items,k) break end end
        if not multi and sel==v then sel=items[1]; setLabelFromSel() end
      end
    }
  end

  function api:AddTextbox(a,b,c,d,e,f)
    local x=asTextbox(a,b,c,d,e,f)
    local cfr=card(56); header(cfr, x.Name or "Textbox")
    local tb=Instance.new("TextBox"); tb.AnchorPoint=Vector2.new(1,0.5); tb.Position=UDim2.new(1,-12,0.5,0); tb.Size=UDim2.fromOffset(220,28)
    tb.Text=x.Default or ""; tb.PlaceholderText=x.Placeholder or (x.Default and "" or "Ketik..."); tb.ClearTextOnFocus=x.TextDisappear or false
    tb.Font=Enum.Font.Gotham; tb.TextSize=12; tb.TextColor3=Theme.Text; tb.BackgroundColor3=Theme.Panel; tb.BackgroundTransparency=0.1; corner(tb,8); stroke(tb,0.5); tb.Parent=cfr
    local function setText(tk) tb.Text=tk or ""; if x.Flag then local flags=makeFlagTable(Tongkol); flags[x.Flag]=flags[x.Flag] or {}; flags[x.Flag].Value=tb.Text end end
    tb.FocusLost:Connect(function() if x.Callback then pcall(x.Callback, tb.Text) end if x.TextDisappear then tb.Text="" end end)
    attachFlag(Tongkol, x.Flag, setText, function() return tb.Text end, tb.Text)
    return { Set=setText }
  end

  function api:AddKeybind(a,b,c,d,e)
    local x=asBind(a,b,c,d,e)
    local cfr=card(56); header(cfr, x.Name or "Keybind")
    local box=Instance.new("TextBox"); box.AnchorPoint=Vector2.new(1,0.5); box.Position=UDim2.new(1,-12,0.5,0); box.Size=UDim2.fromOffset(220,28)
    local current = x.Default or Enum.KeyCode.K
    box.Text = typeof(current)=="EnumItem" and current.Name or tostring(current)
    box.ClearTextOnFocus=false; box.Font=Enum.Font.Gotham; box.TextSize=12; box.TextColor3=Theme.Text; box.BackgroundColor3=Theme.Panel; box.BackgroundTransparency=0.1; corner(box,8); stroke(box,0.5); box.Parent=cfr
    local holding=false
    local function setKey(kc)
      current = kc
      box.Text = kc and (typeof(kc)=="EnumItem" and kc.Name or tostring(kc)) or "(none)"
      if x.Flag then local flags=makeFlagTable(Tongkol); flags[x.Flag]=flags[x.Flag] or {}; flags[x.Flag].Value=current end
    end
    box.Focused:Connect(function() box.Text="Tekan tombol..." end)
    box.FocusLost:Connect(function() box.Text = (typeof(current)=="EnumItem" and current.Name) or tostring(current) end)
    UserInputService.InputBegan:Connect(function(input, gp)
      if gp then return end
      if box:IsFocused() and input.UserInputType==Enum.UserInputType.Keyboard then setKey(input.KeyCode); box:ReleaseFocus() end
      if input.KeyCode == current then
        if x.Hold then holding=true else if x.Callback then pcall(x.Callback) end end
      end
    end)
    UserInputService.InputEnded:Connect(function(input) if input.KeyCode==current and x.Hold and holding then holding=false; if x.Callback then pcall(x.Callback) end end end)
    attachFlag(Tongkol, x.Flag, setKey, function() return current end, current)
    return { Set=setKey }
  end

  function api:AddColorpicker(a,b,c,d,e,f)
    local x=asColor(a,b,c,d,e,f)
    local cfr=card(74); header(cfr, x.Name or "Color", x.Info)
    local swatch=Instance.new("TextButton"); swatch.AnchorPoint=Vector2.new(1,0); swatch.Position=UDim2.new(1,-12,0,0); swatch.Size=UDim2.fromOffset(160,28); swatch.Text=""
    swatch.BackgroundColor3=x.Default or Theme.Accent; corner(swatch,8); stroke(swatch,0.5); swatch.Parent=cfr
    local row=Instance.new("Frame"); row.BackgroundTransparency=1; row.Size=UDim2.new(1,-24,0,28); row.Position=UDim2.fromOffset(12,36); row.Parent=cfr
    local list=Instance.new("UIListLayout"); list.FillDirection=Enum.FillDirection.Horizontal; list.Padding=UDim.new(0,6); list.Parent=row
    local presets = x.Presets or {Color3.fromRGB(0,170,255), Color3.fromRGB(124,58,237), Color3.fromRGB(34,197,94), Color3.fromRGB(14,165,233), Color3.fromRGB(249,115,22), Color3.fromRGB(225,29,72)}
    for _,col in ipairs(presets) do
      local p=Instance.new("TextButton"); p.Size=UDim2.fromOffset(28,28); p.Text=""; p.AutoButtonColor=false; p.BackgroundColor3=col; corner(p,6); stroke(p,0.5); p.Parent=row
      p.MouseButton1Click:Connect(function()
        swatch.BackgroundColor3=col
        if x.Flag then local flags=makeFlagTable(Tongkol); flags[x.Flag]=flags[x.Flag] or {}; flags[x.Flag].Value=col end
        if x.Callback then pcall(x.Callback, col) end
      end)
    end
    local function set(col) swatch.BackgroundColor3=col; if x.Callback then pcall(x.Callback,col) end end
    attachFlag(Tongkol, x.Flag, set, function() return swatch.BackgroundColor3 end, swatch.BackgroundColor3)
    return { Set=set }
  end

  -- Rayfield-style aliases (opsional)
  api.CreateToggle      = api.AddToggle
  api.CreateSlider      = api.AddSlider
  api.CreateDropdown    = api.AddDropdown
  api.CreateInput       = api.AddTextbox
  api.CreateButton      = api.AddButton
  api.CreateLabel       = api.AddLabel
  api.CreateParagraph   = api.AddParagraph
  api.CreateKeybind     = api.AddKeybind
  api.CreateColorPicker = api.AddColorpicker
  api.CreateSection     = api.AddSection

  return api
end
